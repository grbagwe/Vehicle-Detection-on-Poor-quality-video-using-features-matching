function [BW,maskedImage] = segmentImage(RGB)
%segmentImage Segment image using auto-generated code from imageSegmenter App
%  [BW,MASKEDIMAGE] = segmentImage(RGB) segments image RGB using
%  auto-generated code from the imageSegmenter App. The final segmentation
%  is returned in BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 02-Apr-2018
%----------------------------------------------------


% Convert RGB image into L*a*b* color space.
X = rgb2lab(RGB);

% Graph Cut
foregroundInd = [274851 274852 274854 274855 275326 275328 275330 275336 275338 275339 275340 275806 276284 276303 276304 276305 276786 277242 277267 277268 277720 277750 277751 277752 278233 278677 278714 279155 279194 279631 279633 279676 279678 280109 280158 280639 280640 281068 281602 282024 282027 282083 282503 282565 282982 283525 283940 284005 284419 284485 284963 285378 285443 285857 286336 286401 286403 286814 287294 287360 287839 288318 288732 288796 288797 289276 289690 289756 290170 290647 290648 290716 291197 291606 291678 292085 293043 293044 293120 293521 293602 294000 294479 294564 294957 295045 295436 295916 296394 296487 296874 296968 296969 297352 297353 297449 297831 298311 298410 298790 299370 299371 299748 299750 299851 300331 300811 301187 301667 301771 302147 302251 302730 303210 303587 303690 304067 304168 304648 305608 305987 306088 306089 307050 307532 307907 308495 308497 308977 309459 309460 309941 310307 310421 310901 311381 311861 312227 312821 313300 314260 314740 315219 315587 315698 316177 317135 317136 317507 317614 318573 319532 320387 320492 320971 321451 321827 322411 323371 323851 324811 325187 325291 325770 326249 326627 326729 327684 327687 328158 328161 329115 329118 329507 330074 330947 331030 331032 331033 331962 331966 331971 331973 331979 331981 331985 331987 332437 332914 333347 333870 333871 334307 334348 334349 334791 334793 334794 334795 334796 334797 334798 334799 334800 334801 334802 334803 334804 334805 334828 335287 335290 335293 335308 335789 336257 336270 336739 336743 336745 336748 336750 336751 ];
backgroundInd = [53 172 1003 1008 1612 1960 2436 2572 3394 3834 3836 3837 3838 3871 3872 4314 4492 4789 4791 4830 5267 5277 5310 5745 6412 6702 7177 7230 7656 7677 8131 8189 8605 8610 8811 9560 9824 9826 9829 9832 9835 9839 9841 9845 9848 9852 9854 9859 9861 9868 9872 9879 9884 9891 9896 9905 9913 9918 9926 9932 9940 9946 9955 9960 9968 9974 9982 9991 9994 10001 10004 10010 10014 10020 10024 10028 10032 10037 10251 10288 10295 10299 10557 10759 11712 12026 12169 12170 12175 12182 13945 16343 17782 18261 19197 20661 22101 23541 24501 25941 27381 29781 30237 32181 35061 36501 37437 38630 38631 38632 38901 39107 40544 40631 40644 40648 40650 41578 41781 42092 42741 42939 43053 43478 44661 45385 46101 47375 47731 48244 48981 49196 49437 50630 50645 50646 50649 50650 51121 51123 51215 51381 51587 51601 52525 52557 52559 52564 52568 52573 52578 53036 53509 53516 53541 54741 54983 54984 55434 55914 55945 56426 56874 57141 58314 58346 58581 59274 59375 60200 60266 60480 60501 60714 61706 62421 62634 63623 64074 64099 64101 64104 64106 64108 64519 64574 64591 65051 65061 65553 65994 66019 66261 66474 66491 66513 66514 66955 66971 66976 67436 67455 67477 67916 67931 67957 68015 68397 68400 68402 68404 68407 68410 68412 68437 68661 68891 69876 70834 71061 72752 73461 73708 74119 74183 74660 74732 75138 75861 77781 79701 80361 80487 83061 85461 87861 89003 89301 90552 90741 93621 95248 96301 96981 99381 100053 102037 102261 102457 104417 104867 105359 106101 108502 112822 115223 119065 121946 123866 128186 132507 136829 142110 150754 156514 162754 168034 171875 177155 180997 185318 190598 193958 201159 207879 211721 219401 219840 224155 225594 227081 228473 228951 229911 230871 231401 231831 232310 232790 233750 234230 234710 235670 236150 237110 238070 238121 238549 239509 239989 241909 242869 244789 244841 245749 247189 248629 248681 250069 251029 252469 253910 255350 255831 256361 257271 257751 259191 260153 261113 262074 262554 263514 264041 264270 264273 264277 264279 264281 264284 264287 264291 264295 264300 264303 264309 264310 264315 264318 264320 264475 264803 264806 264809 264811 264813 264816 264819 264821 264825 264827 264831 264839 264844 264851 264856 264860 264865 264870 264873 264878 264881 264887 264894 264898 264900 264903 264906 264909 264912 264955 265221 265223 265225 265228 265697 265699 265875 265878 265915 266174 266365 266370 266651 266855 266875 267125 267128 267340 267346 267356 267602 267834 267836 268557 268560 269034 269321 269511 269987 269988 270463 270465 270939 270940 270942 271416 271417 271418 272375 272854 273333 274772 275250 277001 277649 278128 279567 281006 282444 283241 284364 285323 286762 289159 291079 293321 293478 296358 301001 301155 304034 307392 310272 312521 313630 315550 316841 317950 319870 321641 321788 324188 324521 325148 326588 327548 327881 328988 329468 329801 329802 329803 329804 329806 329808 329810 329812 329816 329818 329821 329824 329829 330428 330792 330796 330799 330908 331282 331286 331388 332251 332254 332258 332262 332264 332346 332347 332348 332750 333305 333715 333721 333778 333781 333783 334204 334208 334691 334694 334699 334700 334704 334707 334709 334712 334714 334716 334718 334719 334721 334723 334726 334728 334730 334732 334734 334737 ];
L = superpixels(X,1368,'IsInputLab',true);

% Convert L*a*b* range to [0 1]
scaledX = X;
scaledX(:,:,1) = X(:,:,1) / 100;
scaledX(:,:,2:3) = (X(:,:,2:3) + 100) / 200;
BW = lazysnapping(scaledX,L,foregroundInd,backgroundInd);

% Fill holes
BW = imfill(BW, 'holes');

% Create masked image.
maskedImage = RGB;
maskedImage(repmat(~BW,[1 1 3])) = 0;